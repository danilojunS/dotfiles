;;; PACKAGE MANAGEMENT SETTINGS

(require 'package)

(add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/"))

(setq package-enable-at-startup nil)
(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))

;;; BACKUP AND AUTOSAVE SETTINGS

(setq
   backup-by-copying t
   backup-directory-alist `((".*" . ,temporary-file-directory))
   delete-old-versions t
   kept-new-versions 6
   kept-old-versions 2
   version-control t)

(setq auto-save-file-name-transforms `((".*" ,temporary-file-directory t)))

;;; GENERAL SETTINGS

(use-package linum-relative
  :ensure t
  :config
  (linum-mode)
  (linum-relative-global-mode))

(use-package expand-region
  :ensure t
  :config
  (setq expand-region-contract-fast-key "z"))


(use-package dtrt-indent
  :ensure t
  :config
  (dtrt-indent-mode 1)
  (setq-default tab-width 2 indent-tabs-mode nil)
  (setq-default c-basic-offset 2 c-default-style "bsd"))

;;; KEY-CHORD SETTINGS

(use-package key-chord
  :ensure t
  :config
  (key-chord-mode 1))

;;; HELM SETTINGS

(use-package helm
  :ensure t
  ;:diminish helm-mode
  ;:commands helm-mode
  :config
  (helm-mode 1)
  (global-set-key (kbd "M-x") 'helm-M-x))

;;; PROJECTILE SETTINGS

(use-package projectile
  :ensure t
  :config
  (projectile-global-mode)
  (setq projectile-completion-system 'helm))

;;; NEOTREE SETTINGS

(use-package all-the-icons
  :ensure t
  :config
  ;; workaround to avoid symbol void definition error
  (defalias 'find-if 'cl-find-if))

(use-package neotree
  :ensure t
  :config
  (setq neo-theme (if (display-graphic-p) 'icons 'arrow))
  (setq neo-smart-open t)
  (setq projectile-switch-project-action 'neotree-projectile-action))

;;; FLYCHECK SETTINGS

(use-package flycheck
  :ensure t
  :commands flycheck-mode)

;;; EVIL MODE SETTINGS

(use-package evil
  :ensure t
  :init
  (setq evil-want-C-u-scroll t)
  :config
  (evil-mode 1)

  (use-package evil-leader
    :ensure t
    :config
    (global-evil-leader-mode)
    (evil-leader/set-leader "<SPC>")
    (evil-leader/set-key
      "t"  'neotree-project-dir
      "xx" 'er/expand-region))

  (use-package evil-surround
    :ensure t
    :config
    (global-evil-surround-mode))

  (evil-define-key 'normal neotree-mode-map (kbd "o") 'neotree-enter)
  (evil-define-key 'normal neotree-mode-map (kbd "TAB") 'neotree-enter)
  (evil-define-key 'normal neotree-mode-map (kbd "SPC") 'neotree-enter)
  (evil-define-key 'normal neotree-mode-map (kbd "q") 'neotree-hide)
  (evil-define-key 'normal neotree-mode-map (kbd "RET") 'neotree-enter)
  (key-chord-define evil-insert-state-map "jk" 'evil-normal-state))

;;; THEME SETTINGS

(use-package paganini-theme
  :ensure t
  :config
  (load-theme 'paganini t))

;;; AUXILIARY FUNCTIONS

(defun system-is-mac ()
  (interactive)
  (string-equal system-type "darwin"))

(defun system-is-linux ()
  (interactive)
  (string-equal system-type "gnu/linux"))

(defun neotree-project-dir ()
    "Open NeoTree using the git root."
    (interactive)
    (let ((project-dir (projectile-project-root))
          (file-name (buffer-file-name)))
      (neotree-toggle)
      (if project-dir
          (if (neo-global--window-exists-p)
              (progn
                (neotree-dir project-dir)
                (neotree-find file-name)))
        (message "Could not find git project root."))))

;;; DO NOT TOUCH! - Automatic generated configs

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages (quote (all-the-icons evil paganini-theme))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
